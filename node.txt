1.初始化项目
    create-react-app react-antd-admin
    里面自带react-dom的路由
2.引入antd库 
    npm install antd --save
    App.css下引入 import '~antd/dist/antd.css'
    组件中引入需要的组件 import {Button} from 'antd'

3.支持sass 
    https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-a-css-preprocessor-sass-less-etc
    npm install --save node-sass-chokidar
    npm install --save npm-run-all
    修改package.json文件
    "scripts": {
        "build-css": "node-sass-chokidar src/ -o src/",
        "watch-css": "npm run build-css && node-sass-chokidar src/ -o src/ --watch --recursive",
        "start-js": "react-scripts start",
        "start": "npm-run-all -p watch-css start-js",
        "build-js": "react-scripts build",
        "build": "npm-run-all build-css build-js",
        "test": "react-scripts test --env=jsdom",
        "eject": "react-scripts eject"
    },

    安装npm install sass-loader node-sass --save-dev
    在node_moudles下的react-scripts/config/webpack.config.dev.js修改文件

4.根据路由进行页面布局 
  npm install react-router-dom --save  // router用的V4但是自己不会配置 决定换成react-routerV2.8.1

  npm install --save react-router@2.8.1
  npm install --save react@15.6.1
  npm install --save react-dom@15.6.1
  npm install  react-dom@latest -S 更新到最新模块

  由于antd支持react16.2路由还是不能更换 决定用4.X

    export default class Routers extends React.Component {
        render(){
            return(
                <Router>
                    <Switch>
                        <Route exact path="/login" component={Login} />
                        <Redirect exact  path="/" to="/login"/>  //重定向到登录页面
                        <Route component={Layout} />  // 使用此方法嵌套子路由
                        <Route path="*" component={NoMatch} />
                    </Switch>
                </Router>
            )
        }
    }
    export const childRoutes = [
        {
            path: '/home',
            component: Home,
            exactly: true
        },
        {
            path: '/page2',
            component: Page2
        }
    ]
    LayOut内部路由
    {childRoutes.map((route, index) => (
        <Route
            key={index}
            path={route.path}
            component={route.component}
            exact={route.exactly}
        />
    ))}

错误Log
A <Router> may have only one child element 
Router下只能有一个router 用div包裹所有的route就可以了

8.进行form登录退出操作。
    this.props.history.push('/dashboard')
    在首页的子组件中获取不到this.props.history 需要使用withRouter高阶组件组件
    参考：https://segmentfault.com/q/1010000009928693/a-1020000009928978


5.使用echarts组件 F5刷新的时候图像会溢出  (感觉和路由有关系)

6.父子组件之间的传值

7.子组件的事件里面，需要绑定一个this或者使用箭头函数
    <div className="childCompoents" onClick={this.handleSetLineChartData.bind(this,'newVisitis')}></div>
    <div className="childCompoents" onClick={(e) => this.handleSetLineChartData(id,e)}></div>
为什么不能使用
    在构造函数中绑定一个事件
    this.handleSetLineChartData = this.handleSetLineChartData.bind(this)
     <div className="childCompoents" onClick={this.handleSetLineChartData('newVisitis')}></div>

9.动态生成面包屑导航栏
    参照antd官网例子https://ant.design/components/breadcrumb-cn/

10.完整的table表格筛选数据
 mockjs模拟json数据 axios请求
 npm install axios --save
 npm install mockjs --save

11.Tab

12.Mock 模拟动态数据

13 安装moment依赖
npm install moment --save

npm install react-quill --save

安装redux 实现todo应用
npm install redux --save
npm install react-redux --save


import PropTypes from 'prop-types'不适用 import {PropTypes} from 'react'